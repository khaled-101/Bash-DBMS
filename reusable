function check_for_empty_string {
  if [ -z $1 ]
  then
    echo true
  else
    echo false
  fi
}
function check_special_char {
  x=$*
  if [[ $x =~ [\!\'\"\^\\[\#\`\~\$\%\=\+\<\>\|\:\ \(\)\@\;\?\&\*\\\/]+ ]]
  then
    echo true
  else
    echo false
  fi
}
function check_if_name_starts_with_number {
  if [[ $1 =~ ^[0-9] ]]
  then
    echo true
  else
    echo false
  fi
}
function check_if_dir_exists {
	if [[ -d "$*" ]]
	then
		echo true
	else
		echo false
	fi
}
function listDbs() {
  local database_list=$(ls Databases/)

  selected_db=$(yad --list --width=300 --height=250 \
    --title="List of Databases" \
    --text="Choose a DB to connect to:" \
    --column="Databases" $database_list)

  if [ $? -eq 1 ] || [ -z "$selected_db" ]; then
    DBmenu
    return
  fi

  selected_db=$(echo "$selected_db" | sed 's/|$//')

  yad --question --width=400 --height=100 --text="Do you want to connect to '$selected_db'?"
  response=$?

  if [ $response -eq 0 ]; then
    connect_to_database "$selected_db"
  else
    yad --info --width=400 --height=100 --text="You chose not to connect to any database."
    DBmenu
  fi
}

function connect_to_database() {
  db_name="$1"
  
 
  db_name=$(echo "$db_name"  | awk -F'|' '{print $1}')

  cd "Databases/$db_name" || { echo "Failed to change directory."; return; }

  yad --info --width=400 --height=100 --text="Connected to the database: $db_name"
  echo "Current directory: $(pwd)"
  source ../../Table_menu $db_name
}

function listTables() {
    current_dir=$(pwd)
    local Dbname=$(basename "$current_dir")
    local table_list=$(ls "$current_dir")

    selected_tb=$(yad --list --width=300 --height=250 \
        --title="Table list for $Dbname DB" \
        --text="Tables inside this Database:" \
        --column="Tables" $table_list)

    if [ -z "$table_list" ]; then
    yad --error --width=300 --text="No tables found in the current database."
    Menu_Table $Dbname
    return
    fi

    if [ $? -eq 1 ]; then
        Menu_Table $Dbname
        return
    fi
}
function isNumber {
  if [[ $* =~ ^[1-9][0-9]*$ ]]; then
    echo "true"
  else
    echo "false"
  fi
}

function check_repeated_columns {
  local columns=("$@")

  declare -A column_counts

  for column in "${columns[@]}"; do
    ((column_counts["$column"]++))
  done

  for column in "${!column_counts[@]}"; do
    if [ "${column_counts[$column]}" -gt 1 ]; then
      zenity --error --width=400 --height=100  --text="You Can't Have 2 Columns with the Same Name"
      return 1
    fi
  done

  return 0
}